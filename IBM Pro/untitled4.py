# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IQMYmkklw8hJcfqywxjzlcLOaQST_VqS
"""

pip install matplotlib pandas seaborn plotly

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# Generate random sales data
np.random.seed(0)
num_records = 100

data = {
    'Order_ID': np.random.randint(1000, 2000, num_records),
    'Product_Category': np.random.choice(['Electronics', 'Books', 'Clothing', 'Beauty', 'Home',
                                          'Toys', 'Sports', 'Food', 'Health', 'Jewelry',
                                          'Automotive', 'Furniture', 'Tools', 'Garden',
                                          'Music', 'Movies'], num_records),
    'Quantity': np.random.randint(1, 5, num_records),
    'Price': np.random.randint(10, 200, num_records)
}

df = pd.DataFrame(data)

# Stacked Bar Chart
stacked_data = df.groupby(['Product_Category']).agg({'Quantity':'sum'}).reset_index()

fig = px.bar(stacked_data, x='Product_Category', y='Quantity',
             title='Total Quantity Sold by Product Category',
             labels={'Product_Category': 'Product Category', 'Quantity': 'Total Quantity Sold'},
             hover_name='Product_Category', hover_data={'Quantity': True},
             color='Product_Category')

fig.show()

# Sankey Diagram
sankey_data = df.groupby(['Product_Category', 'Order_ID']).size().reset_index(name='Count')
fig = px.parallel_categories(sankey_data, dimensions=['Product_Category', 'Order_ID'], color='Count',
                             labels={'Product_Category':'Product Category', 'Order_ID':'Order ID', 'Count':'Count'})
fig.show()

# Create hover text for heatmap
hover_text = [[f'Product: {col}<br>Order ID: {row}<br>Quantity: {heatmap_data.loc[col, row]}' for row in heatmap_data.columns] for col in heatmap_data.index]

# Create heatmap
fig = go.Figure(data=go.Heatmap(z=heatmap_data.values,
                                x=heatmap_data.columns,
                                y=heatmap_data.index,
                                hoverinfo='text',
                                text=hover_text,
                                colorscale='Blues'))

fig.update_layout(title='Quantity Heatmap',
                  xaxis_title='Order ID',
                  yaxis_title='Product Category')

fig.show()

# Pie Chart
pie_data = df.groupby('Product_Category').size()
fig = px.pie(names=pie_data.index, values=pie_data.values, title='Sales Distribution by Product Category',
             labels={'names':'Product Category', 'values':'Sales'})
fig.show()

# Bubble Chart
bubble_data = df.groupby(['Product_Category']).agg({'Quantity':'sum', 'Price':'mean'}).reset_index()
fig = px.scatter(bubble_data, x='Quantity', y='Price', size='Quantity', color='Product_Category',
                 hover_name='Product_Category', title='Bubble Chart of Sales Data',
                 labels={'Quantity':'Total Quantity Sold', 'Price':'Average Price', 'Product_Category':'Product Category'})
fig.show()

import pandas as pd
import numpy as np
import plotly.graph_objects as go

# Generate random sales data
np.random.seed(0)
num_records = 1000

data = {
    'Product_Category': np.random.choice(['Electronics', 'Books', 'Clothing', 'Beauty', 'Home',
                                          'Toys', 'Sports', 'Food', 'Health', 'Jewelry',
                                          'Automotive', 'Furniture', 'Tools', 'Garden',
                                          'Music', 'Movies', 'Pet Supplies', 'Office',
                                          'Industrial', 'Baby'], num_records),
    'Price': np.random.randint(10, 200, num_records)
}

df = pd.DataFrame(data)

# Aggregate data for radar chart
radar_data = df.groupby('Product_Category').agg({'Price':'mean'}).reset_index()

# Create figure for radar chart
fig = go.Figure()

# Add trace for average price
fig.add_trace(go.Scatterpolar(
    r=radar_data['Price'],
    theta=radar_data['Product_Category'],
    fill='toself',
    name='Average Price'
))

# Add layout settings
fig.update_layout(
    polar=dict(
        radialaxis=dict(
            visible=True,
            range=[0, radar_data['Price'].max()]
        )),
    showlegend=False,
    title='Radar Chart of Average Price by Product Category'
)

fig.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# Generate random sales data
np.random.seed(0)
num_records = 40

data = {
    'Order_ID': np.random.randint(1000, 2000, num_records),
    'Product_Category': np.random.choice(['Electronics', 'Books', 'Clothing', 'Beauty', 'Home',
                                          'Toys', 'Sports', 'Food', 'Health', 'Jewelry',
                                          'Automotive', 'Furniture', 'Tools', 'Garden',
                                          'Music', 'Movies'], num_records),
    'Quantity': np.random.randint(1, 5, num_records),
    'Price': np.random.randint(10, 200, num_records)
}

df = pd.DataFrame(data)

# Aggregate data by product category and order ID
line_data = df.groupby(['Product_Category', 'Order_ID']).agg({'Quantity':'sum'}).reset_index()

# Line Chart
fig = px.line(line_data, x='Order_ID', y='Quantity', color='Product_Category',
              title='Total Quantity Sold Over Time by Product Category',
              labels={'Order_ID': 'Order ID', 'Quantity': 'Total Quantity Sold'})

fig.show()

